{
    "sourceFile": "lib/app/modules/notes/widgets/add_notes_widget.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 54,
            "patches": [
                {
                    "date": 1664602992748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1664603002064,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,11 @@\n-stle\n\\ No newline at end of file\n+import 'package:flutter/src/widgets/container.dart';\r\n+import 'package:flutter/src/widgets/framework.dart';\r\n+\r\n+class AddNote extends StatelessWidget {\r\n+  const AddNote({super.key});\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Container();\r\n+  }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1664603024135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n+import 'package:flutter/cupertino.dart';\r\n import 'package:flutter/src/widgets/container.dart';\r\n import 'package:flutter/src/widgets/framework.dart';\r\n \r\n-class AddNote extends StatelessWidget {\r\n-  const AddNote({super.key});\r\n+class AddNoteWidget extends StatelessWidget {\r\n+  const AddNoteWidget({super.key});\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container();\r\n+    return Container(child: Column,);\r\n   }\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1664865362308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,105 @@\n-import 'package:flutter/cupertino.dart';\r\n+import 'dart:convert';\r\n+\r\n+import 'package:flutter/material.dart';\r\n import 'package:flutter/src/widgets/container.dart';\r\n import 'package:flutter/src/widgets/framework.dart';\r\n+import 'package:get/get.dart';\r\n+import 'package:get/get_state_manager/src/simple/get_view.dart';\r\n+import 'package:get/get_utils/src/queue/get_queue.dart';\r\n+import 'package:therapeutic/app/commons/utils/dialogs.dart';\r\n+import 'package:therapeutic/app/modules/notes/models/notes_model.dart'\r\n+    as noteModel;\r\n\\ No newline at end of file\n+import 'package:therapeutic/app/modules/notes/models/update_note_model.dart';\r\n \r\n-class AddNoteWidget extends StatelessWidget {\r\n-  const AddNoteWidget({super.key});\r\n+import '../controllers/notes_controller.dart';\r\n+import '../models/create_note_model.dart';\r\n \r\n+class AddNoteWidget extends GetView<NotesController> {\r\n+  String note;\r\n+  String noteId;\r\n+  String forProduct;\r\n+\r\n+  AddNoteWidget(\r\n+      {required this.note, required this.noteId, required this.forProduct});\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container(child: Column,);\r\n+    TextEditingController ctrl = new TextEditingController(text: note);\r\n+    return\r\n+       Padding(\r\n+         padding: EdgeInsets.only(\r\n+             bottom: MediaQuery.of(context).viewInsets.bottom),         child: Container(\r\n+          child: Column(\r\n+\r\n+            mainAxisSize: MainAxisSize.min,\r\n+              children: [\r\n+            TextFormField(\r\n+              maxLines: 10,\r\n+              minLines: 10,\r\n+              controller: ctrl,\r\n+            ),\r\n+            ElevatedButton(\r\n+                onPressed: () {\r\n+                  if (noteId.compareTo(\"-1\") != 0) {\r\n+                    controller\r\n+                        .updateNote(\r\n+                      noteId,\r\n+                      forProduct,\r\n+                      ctrl.text,\r\n+                    )\r\n+                        .then((UpdateNoteModel value) {\r\n+                      print(\r\n+                          \"ID::: ${controller.allNotes.indexOf(value.note!.sId)}\");\r\n+// controller.allNotes.value.\r\n+\r\n+                      Get.back();\r\n+                    });\r\n+                  } else {\r\n+                    controller\r\n+                        .createNote(\r\n+                      forProduct,\r\n+                      ctrl.text,\r\n+                    )\r\n+                        .then((CreateNoteModel value) {\r\n+                      CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n+                      if (value.status == 1) {\r\n+                        // controller.allNotes.add(\r\n+                        //     noteModel.Note(description: value!.note!.description!,byUser: value!.note!.byUser!,createdAt: value!.note!.createdAt!,forProduct: value!.note!.forProduct!,iV: value!.note!.iV!,sId: value!.note!.sId!,updatedAt: value!.note!.updatedAt!));\r\n+                        //   controller.allNotes.add(value!.note! as noteModel.NoteModel);\r\n+                        //  AllNote\r\n+                        /*controller.allNotes.value.add(noteModel.AllNote(\r\n+                            description: value!.note!.description!,\r\n+                            createdAt: value!.note!.createdAt!,\r\n+                            forProduct: noteModel.ForProduct.fromJson(\r\n+                                json.decode(value!.note!.forProduct.toString())),\r\n+                            byUser: noteModel.ByUser.fromJson(\r\n+                                json.decode(value!.note!.byUser.toString())),\r\n+                            iV: value!.note!.iV!,\r\n+                            sId: value!.note!.sId!,\r\n+                            updatedAt: value!.note!.updatedAt!));*/\r\n+\r\n+\r\n+                        controller.allNotes.value.add(noteModel.AllNote(\r\n+                            description: value!.note!.description!,\r\n+                            createdAt: value!.note!.createdAt!,\r\n+                            forProduct:\r\n+                            noteModel.ForProduct.fromJson(\r\n+                                json.decode(value.note!.forProduct.toString())),\r\n+                            byUser: noteModel.ByUser.fromJson(\r\n+                                json.decode(value!.note!.byUser.toString())),\r\n+                            iV: value!.note!.iV!,\r\n+                            sId: value!.note!.sId!,\r\n+                            updatedAt: value!.note!.updatedAt!));\r\n+\r\n+                      } else {}\r\n+\r\n+                      Get.back();\r\n+                    });\r\n+                  }\r\n+                },\r\n+                child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n+          ]),\r\n+    ),\r\n+       );\r\n   }\r\n-}\n+}\r\n"
                },
                {
                    "date": 1664865368400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,16 +79,16 @@\n                             updatedAt: value!.note!.updatedAt!));*/\r\n \r\n \r\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n-                            description: value!.note!.description!,\r\n-                            createdAt: value!.note!.createdAt!,\r\n+                            description: value.note!.description!,\r\n+                            createdAt: value.note!.createdAt!,\r\n                             forProduct:\r\n                             noteModel.ForProduct.fromJson(\r\n                                 json.decode(value.note!.forProduct.toString())),\r\n                             byUser: noteModel.ByUser.fromJson(\r\n-                                json.decode(value!.note!.byUser.toString())),\r\n-                            iV: value!.note!.iV!,\r\n+                                json.decode(value.note!.byUser.toString())),\r\n+                            iV: value.note!.iV!,\r\n                             sId: value!.note!.sId!,\r\n                             updatedAt: value!.note!.updatedAt!));\r\n \r\n                       } else {}\r\n@@ -101,5 +101,5 @@\n           ]),\r\n     ),\r\n        );\r\n   }\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1664865460297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,16 +81,14 @@\n \r\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n-                            forProduct:\r\n-                            noteModel.ForProduct.fromJson(\r\n-                                json.decode(value.note!.forProduct.toString())),\r\n+                          \r\n                             byUser: noteModel.ByUser.fromJson(\r\n                                 json.decode(value.note!.byUser.toString())),\r\n                             iV: value.note!.iV!,\r\n-                            sId: value!.note!.sId!,\r\n-                            updatedAt: value!.note!.updatedAt!));\r\n+                            sId: value.note!.sId!,\r\n+                            updatedAt: value.note!.updatedAt!));\r\n \r\n                       } else {}\r\n \r\n                       Get.back();\r\n"
                },
                {
                    "date": 1664865630245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,8 +84,12 @@\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n                             byUser: noteModel.ByUser.fromJson(\r\n                                 json.decode(value.note!.byUser.toString())),\r\n+\r\n+                                \r\n+                                  forProduct: noteModel.ForProduct.fromJson(\r\n+                              json.decode(value.note!.forProduct.toString())),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n \r\n"
                },
                {
                    "date": 1664865649199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,12 +82,11 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(\r\n-                                json.decode(value.note!.byUser.toString())),\r\n+                            byUser: noteModel.ByUser,\r\n \r\n-                                \r\n+\r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n"
                },
                {
                    "date": 1664865668701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser,\r\n+                            byUser: noteModel.ByUser.fromJson(value.),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865678704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(value.),\r\n+                            byUser: noteModel.ByUser.fromJson(  value.note!.byUser),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865684848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(  value.note!.byUser),\r\n+                            byUser: noteModel.ByUser.fromJson(json.  value.note!.byUser),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865697114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(json.  value.note!.byUser),\r\n+                            byUser: noteModel.ByUser.fromJson(json.encoder  value.note!.byUser),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865703128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(json.encoder  value.note!.byUser),\r\n+                            byUser: noteModel.ByUser.fromJson(json.encoder(  value.note!.byUser)),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865708513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(json.encoder(  value.note!.byUser)),\r\n+                            byUser: noteModel.ByUser.fromJson(json.encoder(  value.note!.byUser.toJson())),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865713792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(json.encoder(  value.note!.byUser.toJson())),\r\n+                            byUser: noteModel.ByUser.fromJson(j  value.note!.byUser.toJson())),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664865724467,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n                         controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n-                            byUser: noteModel.ByUser.fromJson(j  value.note!.byUser.toJson())),\r\n+                            byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n                               json.decode(value.note!.forProduct.toString())),\r\n"
                },
                {
                    "date": 1664866112604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                             byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n-                              json.decode(value.note!.forProduct.toString())),\r\n+                              (value.note!.forProduct.toString())),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n \r\n"
                },
                {
                    "date": 1664866119163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                             byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n-                              (value.note!.forProduct.toString())),\r\n+                              (value.note!.forProduct.toJson()),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n \r\n"
                },
                {
                    "date": 1664866127765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                             byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n-                              (value.note!.forProduct.toJson()),\r\n+                              value.note!.forProduct.toJson()),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n \r\n"
                },
                {
                    "date": 1664866134505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n                             byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n \r\n \r\n                                   forProduct: noteModel.ForProduct.fromJson(\r\n-                              value.note!.forProduct.toJson()),\r\n+                              value.note!.forProduct!.toJson()),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n \r\n"
                },
                {
                    "date": 1664866252903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n                             sId: value!.note!.sId!,\r\n                             updatedAt: value!.note!.updatedAt!));*/\r\n \r\n \r\n-                        controller.allNotes.value.add(noteModel.AllNote(\r\n+                        controller.allNotes.add(noteModel.AllNote(\r\n                             description: value.note!.description!,\r\n                             createdAt: value.note!.createdAt!,\r\n                           \r\n                             byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n"
                },
                {
                    "date": 1664866332282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                               value.note!.forProduct!.toJson()),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n-\r\n+ controller.allNotes.\r\n                       } else {}\r\n \r\n                       Get.back();\r\n                     });\r\n"
                },
                {
                    "date": 1664866337594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                               value.note!.forProduct!.toJson()),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n- controller.allNotes.\r\n+\r\n                       } else {}\r\n \r\n                       Get.back();\r\n                     });\r\n"
                },
                {
                    "date": 1664866345400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n                               value.note!.forProduct!.toJson()),\r\n                             iV: value.note!.iV!,\r\n                             sId: value.note!.sId!,\r\n                             updatedAt: value.note!.updatedAt!));\r\n-\r\n+print(\"values.... \")\r\n                       } else {}\r\n \r\n                       Get.back();\r\n                     });\r\n"
                },
                {
                    "date": 1664866353304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,51 +24,48 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     TextEditingController ctrl = new TextEditingController(text: note);\r\n-    return\r\n-       Padding(\r\n-         padding: EdgeInsets.only(\r\n-             bottom: MediaQuery.of(context).viewInsets.bottom),         child: Container(\r\n-          child: Column(\r\n-\r\n-            mainAxisSize: MainAxisSize.min,\r\n-              children: [\r\n-            TextFormField(\r\n-              maxLines: 10,\r\n-              minLines: 10,\r\n-              controller: ctrl,\r\n-            ),\r\n-            ElevatedButton(\r\n-                onPressed: () {\r\n-                  if (noteId.compareTo(\"-1\") != 0) {\r\n-                    controller\r\n-                        .updateNote(\r\n-                      noteId,\r\n-                      forProduct,\r\n-                      ctrl.text,\r\n-                    )\r\n-                        .then((UpdateNoteModel value) {\r\n-                      print(\r\n-                          \"ID::: ${controller.allNotes.indexOf(value.note!.sId)}\");\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: Container(\r\n+        child: Column(mainAxisSize: MainAxisSize.min, children: [\r\n+          TextFormField(\r\n+            maxLines: 10,\r\n+            minLines: 10,\r\n+            controller: ctrl,\r\n+          ),\r\n+          ElevatedButton(\r\n+              onPressed: () {\r\n+                if (noteId.compareTo(\"-1\") != 0) {\r\n+                  controller\r\n+                      .updateNote(\r\n+                    noteId,\r\n+                    forProduct,\r\n+                    ctrl.text,\r\n+                  )\r\n+                      .then((UpdateNoteModel value) {\r\n+                    print(\r\n+                        \"ID::: ${controller.allNotes.indexOf(value.note!.sId)}\");\r\n // controller.allNotes.value.\r\n \r\n-                      Get.back();\r\n-                    });\r\n-                  } else {\r\n-                    controller\r\n-                        .createNote(\r\n-                      forProduct,\r\n-                      ctrl.text,\r\n-                    )\r\n-                        .then((CreateNoteModel value) {\r\n-                      CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n-                      if (value.status == 1) {\r\n-                        // controller.allNotes.add(\r\n-                        //     noteModel.Note(description: value!.note!.description!,byUser: value!.note!.byUser!,createdAt: value!.note!.createdAt!,forProduct: value!.note!.forProduct!,iV: value!.note!.iV!,sId: value!.note!.sId!,updatedAt: value!.note!.updatedAt!));\r\n-                        //   controller.allNotes.add(value!.note! as noteModel.NoteModel);\r\n-                        //  AllNote\r\n-                        /*controller.allNotes.value.add(noteModel.AllNote(\r\n+                    Get.back();\r\n+                  });\r\n+                } else {\r\n+                  controller\r\n+                      .createNote(\r\n+                    forProduct,\r\n+                    ctrl.text,\r\n+                  )\r\n+                      .then((CreateNoteModel value) {\r\n+                    CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n+                    if (value.status == 1) {\r\n+                      // controller.allNotes.add(\r\n+                      //     noteModel.Note(description: value!.note!.description!,byUser: value!.note!.byUser!,createdAt: value!.note!.createdAt!,forProduct: value!.note!.forProduct!,iV: value!.note!.iV!,sId: value!.note!.sId!,updatedAt: value!.note!.updatedAt!));\r\n+                      //   controller.allNotes.add(value!.note! as noteModel.NoteModel);\r\n+                      //  AllNote\r\n+                      /*controller.allNotes.value.add(noteModel.AllNote(\r\n                             description: value!.note!.description!,\r\n                             createdAt: value!.note!.createdAt!,\r\n                             forProduct: noteModel.ForProduct.fromJson(\r\n                                 json.decode(value!.note!.forProduct.toString())),\r\n@@ -77,30 +74,27 @@\n                             iV: value!.note!.iV!,\r\n                             sId: value!.note!.sId!,\r\n                             updatedAt: value!.note!.updatedAt!));*/\r\n \r\n-\r\n-                        controller.allNotes.add(noteModel.AllNote(\r\n-                            description: value.note!.description!,\r\n-                            createdAt: value.note!.createdAt!,\r\n-                          \r\n-                            byUser: noteModel.ByUser.fromJson( value.note!.byUser!.toJson()),\r\n-\r\n-\r\n-                                  forProduct: noteModel.ForProduct.fromJson(\r\n+                      controller.allNotes.add(noteModel.AllNote(\r\n+                          description: value.note!.description!,\r\n+                          createdAt: value.note!.createdAt!,\r\n+                          byUser: noteModel.ByUser.fromJson(\r\n+                              value.note!.byUser!.toJson()),\r\n+                          forProduct: noteModel.ForProduct.fromJson(\r\n                               value.note!.forProduct!.toJson()),\r\n-                            iV: value.note!.iV!,\r\n-                            sId: value.note!.sId!,\r\n-                            updatedAt: value.note!.updatedAt!));\r\n-print(\"values.... \")\r\n-                      } else {}\r\n+                          iV: value.note!.iV!,\r\n+                          sId: value.note!.sId!,\r\n+                          updatedAt: value.note!.updatedAt!));\r\n+                      print(\"values.... ${controller.allNotes.length}\");\r\n+                    } else {}\r\n \r\n-                      Get.back();\r\n-                    });\r\n-                  }\r\n-                },\r\n-                child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n-          ]),\r\n-    ),\r\n-       );\r\n+                    Get.back();\r\n+                  });\r\n+                }\r\n+              },\r\n+              child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n+        ]),\r\n+      ),\r\n+    );\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1664879729971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    TextEditingController ctrl = new TextEditingController(text: note);\r\n+    \r\n     return Padding(\r\n       padding:\r\n           EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n       child: Container(\r\n"
                },
                {
                    "date": 1664879741899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n-\r\n+TextEditingController ctrl = new TextEditingController(text: this.note);\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n     return Padding(\r\n"
                },
                {
                    "date": 1664879751389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n-TextEditingController ctrl = new TextEditingController(text: this.note);\r\n+TextEditingController ctrl = new TextEditingController(text: note);\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n     return Padding(\r\n"
                },
                {
                    "date": 1664879775769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n+      \r\n TextEditingController ctrl = new TextEditingController(text: note);\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n"
                },
                {
                    "date": 1664879782966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,11 @@\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n-      \r\n-TextEditingController ctrl = new TextEditingController(text: note);\r\n+\r\n+TextEditingController ctrl =  TextEditingController(text: note);\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n     return Padding(\r\n"
                },
                {
                    "date": 1664879793859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n import '../controllers/notes_controller.dart';\r\n import '../models/create_note_model.dart';\r\n \r\n class AddNoteWidget extends GetView<NotesController> {\r\n-  String note;\r\n+  String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n"
                },
                {
                    "date": 1664879830838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-TextEditingController ctrl =  TextEditingController(text: note);\r\n+TextEditingController ctrl =  TextEditingController(text: this);\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n"
                },
                {
                    "date": 1664879838231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-TextEditingController ctrl =  TextEditingController(text: this);\r\n+TextEditingController ctrl =  TextEditingController(text: this.note.to);\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n"
                },
                {
                    "date": 1664879857110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-TextEditingController ctrl =  TextEditingController(text: this.note.to);\r\n+TextEditingController ctrl =  TextEditingController(text: \"note.toString()\");\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n"
                },
                {
                    "date": 1664879898958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n class AddNoteWidget extends GetView<NotesController> {\r\n   String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n-\r\n+ini\r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n TextEditingController ctrl =  TextEditingController(text: \"note.toString()\");\r\n"
                },
                {
                    "date": 1664879910430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,13 @@\n class AddNoteWidget extends GetView<NotesController> {\r\n   String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n-ini\r\n+@override\r\n+void initState() {\r\n+  super.initState();\r\n+  \r\n+}\r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n TextEditingController ctrl =  TextEditingController(text: \"note.toString()\");\r\n"
                },
                {
                    "date": 1664879934502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,9 @@\n class AddNoteWidget extends GetView<NotesController> {\r\n   String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n-@override\r\n-void initState() {\r\n-  super.initState();\r\n-  \r\n-}\r\n+\r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n TextEditingController ctrl =  TextEditingController(text: \"note.toString()\");\r\n"
                },
                {
                    "date": 1664879961727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-TextEditingController ctrl =  TextEditingController(text: \"note.toString()\");\r\n+TextEditingController ctrl =  TextEditingController(text: note.toString()\");\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n"
                },
                {
                    "date": 1664879986729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,16 +14,17 @@\n import '../controllers/notes_controller.dart';\r\n import '../models/create_note_model.dart';\r\n \r\n class AddNoteWidget extends GetView<NotesController> {\r\n+class AddNoteWidget extends GetView<NotesController> {\r\n   String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-TextEditingController ctrl =  TextEditingController(text: note.toString()\");\r\n+TextEditingController ctrl =  TextEditingController(text: note.toString());\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n"
                },
                {
                    "date": 1664879993299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,10 @@\n \r\n import '../controllers/notes_controller.dart';\r\n import '../models/create_note_model.dart';\r\n \r\n-class AddNoteWidget extends GetView<NotesController> {\r\n-class AddNoteWidget extends GetView<NotesController> {\r\n+// class AddNoteWidget extends GetView<NotesController> {\r\n+class AddNoteWidget extends st {\r\n   String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n \r\n"
                },
                {
                    "date": 1664880009342,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,16 @@\n import '../controllers/notes_controller.dart';\r\n import '../models/create_note_model.dart';\r\n \r\n // class AddNoteWidget extends GetView<NotesController> {\r\n-class AddNoteWidget extends st {\r\n+class AddNoteWidget extends StatelessWidget {\r\n+  const name({super.key});\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Container();\r\n+  }\r\n+} {\r\n   String note=\"\";\r\n   String noteId;\r\n   String forProduct;\r\n \r\n"
                },
                {
                    "date": 1664880016402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import '../models/create_note_model.dart';\r\n \r\n // class AddNoteWidget extends GetView<NotesController> {\r\n class AddNoteWidget extends StatelessWidget {\r\n-  const name({super.key});\r\n+  const AddNoteWidget({super.key});\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Container();\r\n"
                },
                {
                    "date": 1664880039902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,77 +34,7 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     \r\n-    return Padding(\r\n-      padding:\r\n-          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n-      child: Container(\r\n-        child: Column(mainAxisSize: MainAxisSize.min, children: [\r\n-          TextFormField(\r\n-            maxLines: 10,\r\n-            minLines: 10,\r\n-            controller: ctrl,\r\n-          ),\r\n-          ElevatedButton(\r\n-              onPressed: () {\r\n-                if (noteId.compareTo(\"-1\") != 0) {\r\n-                  controller\r\n-                      .updateNote(\r\n-                    noteId,\r\n-                    forProduct,\r\n-                    ctrl.text,\r\n-                  )\r\n-                      .then((UpdateNoteModel value) {\r\n-                    print(\r\n-                        \"ID::: ${controller.allNotes.indexOf(value.note!.sId)}\");\r\n-// controller.allNotes.value.\r\n-\r\n-                    Get.back();\r\n-                  });\r\n-                } else {\r\n-                  controller\r\n-                      .createNote(\r\n-                    forProduct,\r\n-                    ctrl.text,\r\n-                  )\r\n-                      .then((CreateNoteModel value) {\r\n-                    CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n-                    if (value.status == 1) {\r\n-                      // controller.allNotes.add(\r\n-                      //     noteModel.Note(description: value!.note!.description!,byUser: value!.note!.byUser!,createdAt: value!.note!.createdAt!,forProduct: value!.note!.forProduct!,iV: value!.note!.iV!,sId: value!.note!.sId!,updatedAt: value!.note!.updatedAt!));\r\n-                      //   controller.allNotes.add(value!.note! as noteModel.NoteModel);\r\n-                      //  AllNote\r\n-                      /*controller.allNotes.value.add(noteModel.AllNote(\r\n-                            description: value!.note!.description!,\r\n-                            createdAt: value!.note!.createdAt!,\r\n-                            forProduct: noteModel.ForProduct.fromJson(\r\n-                                json.decode(value!.note!.forProduct.toString())),\r\n-                            byUser: noteModel.ByUser.fromJson(\r\n-                                json.decode(value!.note!.byUser.toString())),\r\n-                            iV: value!.note!.iV!,\r\n-                            sId: value!.note!.sId!,\r\n-                            updatedAt: value!.note!.updatedAt!));*/\r\n-\r\n-                      controller.allNotes.add(noteModel.AllNote(\r\n-                          description: value.note!.description!,\r\n-                          createdAt: value.note!.createdAt!,\r\n-                          byUser: noteModel.ByUser.fromJson(\r\n-                              value.note!.byUser!.toJson()),\r\n-                          forProduct: noteModel.ForProduct.fromJson(\r\n-                              value.note!.forProduct!.toJson()),\r\n-                          iV: value.note!.iV!,\r\n-                          sId: value.note!.sId!,\r\n-                          updatedAt: value.note!.updatedAt!));\r\n-                      print(\"values.... ${controller.allNotes.length}\");\r\n-                    } else {}\r\n-\r\n-                    Get.back();\r\n-                  });\r\n-                }\r\n-              },\r\n-              child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n-        ]),\r\n-      ),\r\n-    );\r\n+    return \r\n   }\r\n }\r\n"
                },
                {
                    "date": 1664880111394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,79 @@\n   const AddNoteWidget({super.key});\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n-    return Container();\r\n+    return Padding(\r\n+      padding:\r\n+          EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n+      child: Container(\r\n+        child: Column(mainAxisSize: MainAxisSize.min, children: [\r\n+          TextFormField(\r\n+            maxLines: 10,\r\n+            minLines: 10,\r\n+            controller: ctrl,\r\n+          ),\r\n+          ElevatedButton(\r\n+              onPressed: () {\r\n+                if (noteId.compareTo(\"-1\") != 0) {\r\n+                  controller\r\n+                      .updateNote(\r\n+                    noteId,\r\n+                    forProduct,\r\n+                    ctrl.text,\r\n+                  )\r\n+                      .then((UpdateNoteModel value) {\r\n+                    print(\r\n+                        \"ID::: ${controller.allNotes.indexOf(value.note!.sId)}\");\r\n+// controller.allNotes.value.\r\n+\r\n+                    Get.back();\r\n+                  });\r\n+                } else {\r\n+                  controller\r\n+                      .createNote(\r\n+                    forProduct,\r\n+                    ctrl.text,\r\n+                  )\r\n+                      .then((CreateNoteModel value) {\r\n+                    CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n+                    if (value.status == 1) {\r\n+                      // controller.allNotes.add(\r\n+                      //     noteModel.Note(description: value!.note!.description!,byUser: value!.note!.byUser!,createdAt: value!.note!.createdAt!,forProduct: value!.note!.forProduct!,iV: value!.note!.iV!,sId: value!.note!.sId!,updatedAt: value!.note!.updatedAt!));\r\n+                      //   controller.allNotes.add(value!.note! as noteModel.NoteModel);\r\n+                      //  AllNote\r\n+                      /*controller.allNotes.value.add(noteModel.AllNote(\r\n+                            description: value!.note!.description!,\r\n+                            createdAt: value!.note!.createdAt!,\r\n+                            forProduct: noteModel.ForProduct.fromJson(\r\n+                                json.decode(value!.note!.forProduct.toString())),\r\n+                            byUser: noteModel.ByUser.fromJson(\r\n+                                json.decode(value!.note!.byUser.toString())),\r\n+                            iV: value!.note!.iV!,\r\n+                            sId: value!.note!.sId!,\r\n+                            updatedAt: value!.note!.updatedAt!));*/\r\n+\r\n+                      controller.allNotes.add(noteModel.AllNote(\r\n+                          description: value.note!.description!,\r\n+                          createdAt: value.note!.createdAt!,\r\n+                          byUser: noteModel.ByUser.fromJson(\r\n+                              value.note!.byUser!.toJson()),\r\n+                          forProduct: noteModel.ForProduct.fromJson(\r\n+                              value.note!.forProduct!.toJson()),\r\n+                          iV: value.note!.iV!,\r\n+                          sId: value.note!.sId!,\r\n+                          updatedAt: value.note!.updatedAt!));\r\n+                      print(\"values.... ${controller.allNotes.length}\");\r\n+                    } else {}\r\n+\r\n+                    Get.back();\r\n+                  });\r\n+                }\r\n+              },\r\n+              child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n+        ]),\r\n+      ),\r\n+    );;\r\n   }\r\n } {\r\n   String note=\"\";\r\n   String noteId;\r\n@@ -31,10 +101,6 @@\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n TextEditingController ctrl =  TextEditingController(text: note.toString());\r\n \r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    \r\n-    return \r\n-  }\r\n+\r\n }\r\n"
                },
                {
                    "date": 1664880118076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,16 +91,9 @@\n         ]),\r\n       ),\r\n     );;\r\n   }\r\n-} {\r\n-  String note=\"\";\r\n-  String noteId;\r\n-  String forProduct;\r\n+} \r\n+ \r\n \r\n-  AddNoteWidget(\r\n-      {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-TextEditingController ctrl =  TextEditingController(text: note.toString());\r\n \r\n-\r\n-}\r\n"
                },
                {
                    "date": 1664880124006,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,17 @@\n import '../models/create_note_model.dart';\r\n \r\n // class AddNoteWidget extends GetView<NotesController> {\r\n class AddNoteWidget extends StatelessWidget {\r\n-  const AddNoteWidget({super.key});\r\n+  String note = \"\";\r\n+  String noteId;\r\n+  String forProduct;\r\n \r\n+  AddNoteWidget(\r\n+      {required this.note, required this.noteId, required this.forProduct});\r\n+\r\n+  TextEditingController ctrl = TextEditingController(text: note.toString());\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Padding(\r\n       padding:\r\n"
                },
                {
                    "date": 1664880235057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,18 +14,23 @@\n import '../controllers/notes_controller.dart';\r\n import '../models/create_note_model.dart';\r\n \r\n // class AddNoteWidget extends GetView<NotesController> {\r\n-class AddNoteWidget extends StatelessWidget {\r\n+class AddNoteWidget extends StatefulWidget {\r\n   String note = \"\";\r\n   String noteId;\r\n   String forProduct;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n-  TextEditingController ctrl = TextEditingController(text: note.toString());\r\n+  @override\r\n+  State<AddNoteWidget> createState() => _AddNoteWidgetState();\r\n+}\r\n \r\n+class _AddNoteWidgetState extends State<AddNoteWidget> {\r\n+  TextEditingController ctrl = TextEditingController(text: widget.note.toString());\r\n+\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Padding(\r\n       padding:\r\n@@ -38,13 +43,13 @@\n             controller: ctrl,\r\n           ),\r\n           ElevatedButton(\r\n               onPressed: () {\r\n-                if (noteId.compareTo(\"-1\") != 0) {\r\n+                if (widget.noteId.compareTo(\"-1\") != 0) {\r\n                   controller\r\n                       .updateNote(\r\n-                    noteId,\r\n-                    forProduct,\r\n+                    widget.noteId,\r\n+                    widget.forProduct,\r\n                     ctrl.text,\r\n                   )\r\n                       .then((UpdateNoteModel value) {\r\n                     print(\r\n@@ -55,9 +60,9 @@\n                   });\r\n                 } else {\r\n                   controller\r\n                       .createNote(\r\n-                    forProduct,\r\n+                    widget.forProduct,\r\n                     ctrl.text,\r\n                   )\r\n                       .then((CreateNoteModel value) {\r\n                     CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n@@ -93,9 +98,9 @@\n                     Get.back();\r\n                   });\r\n                 }\r\n               },\r\n-              child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n+              child: Text(widget.noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n         ]),\r\n       ),\r\n     );;\r\n   }\r\n"
                },
                {
                    "date": 1664880242584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n   State<AddNoteWidget> createState() => _AddNoteWidgetState();\r\n }\r\n \r\n class _AddNoteWidgetState extends State<AddNoteWidget> {\r\n-  TextEditingController ctrl = TextEditingController(text: widget.note.toString());\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Padding(\r\n"
                },
                {
                    "date": 1664880250986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,15 +18,22 @@\n class AddNoteWidget extends StatefulWidget {\r\n   String note = \"\";\r\n   String noteId;\r\n   String forProduct;\r\n+  TextEditingController ctrl =\r\n+      TextEditingController(text: widget.note.toString());\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n   @override\r\n   State<AddNoteWidget> createState() => _AddNoteWidgetState();\r\n }\r\n+@override\r\n+void initState() {\r\n+  super.initState();\r\n+  \r\n+}\r\n \r\n class _AddNoteWidgetState extends State<AddNoteWidget> {\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1664880258772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,8 @@\n   String note = \"\";\r\n   String noteId;\r\n   String forProduct;\r\n   TextEditingController ctrl =\r\n-      TextEditingController(text: widget.note.toString());\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n"
                },
                {
                    "date": 1664880265025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,24 +18,25 @@\n class AddNoteWidget extends StatefulWidget {\r\n   String note = \"\";\r\n   String noteId;\r\n   String forProduct;\r\n-  TextEditingController ctrl =\r\n+  TextEditingController ctrl;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n   @override\r\n   State<AddNoteWidget> createState() => _AddNoteWidgetState();\r\n }\r\n+\r\n @override\r\n void initState() {\r\n+  ctrl =\r\n+      TextEditingController(text: widget.note.toString())\r\n   super.initState();\r\n-  \r\n }\r\n \r\n class _AddNoteWidgetState extends State<AddNoteWidget> {\r\n-\r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Padding(\r\n       padding:\r\n@@ -103,14 +104,12 @@\n                     Get.back();\r\n                   });\r\n                 }\r\n               },\r\n-              child: Text(widget.noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n+              child: Text(\r\n+                  widget.noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n         ]),\r\n       ),\r\n-    );;\r\n+    );\r\n+    ;\r\n   }\r\n-} \r\n- \r\n-\r\n-\r\n-\r\n+}\r\n"
                },
                {
                    "date": 1664880294403,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,32 +13,19 @@\n \r\n import '../controllers/notes_controller.dart';\r\n import '../models/create_note_model.dart';\r\n \r\n-// class AddNoteWidget extends GetView<NotesController> {\r\n-class AddNoteWidget extends StatefulWidget {\r\n-  String note = \"\";\r\n+class AddNoteWidget extends GetView<NotesController> {\r\n+  String note;\r\n   String noteId;\r\n   String forProduct;\r\n-  TextEditingController ctrl;\r\n \r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n   @override\r\n-  State<AddNoteWidget> createState() => _AddNoteWidgetState();\r\n-}\r\n-\r\n-@override\r\n-void initState() {\r\n-  ctrl =\r\n-      TextEditingController(text: widget.note.toString())\r\n-  super.initState();\r\n-}\r\n-\r\n-class _AddNoteWidgetState extends State<AddNoteWidget> {\r\n-  @override\r\n   Widget build(BuildContext context) {\r\n+    TextEditingController ctrl = new TextEditingController(text: note);\r\n     return Padding(\r\n       padding:\r\n           EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n       child: Container(\r\n@@ -49,13 +36,13 @@\n             controller: ctrl,\r\n           ),\r\n           ElevatedButton(\r\n               onPressed: () {\r\n-                if (widget.noteId.compareTo(\"-1\") != 0) {\r\n+                if (noteId.compareTo(\"-1\") != 0) {\r\n                   controller\r\n                       .updateNote(\r\n-                    widget.noteId,\r\n-                    widget.forProduct,\r\n+                    noteId,\r\n+                    forProduct,\r\n                     ctrl.text,\r\n                   )\r\n                       .then((UpdateNoteModel value) {\r\n                     print(\r\n@@ -66,9 +53,9 @@\n                   });\r\n                 } else {\r\n                   controller\r\n                       .createNote(\r\n-                    widget.forProduct,\r\n+                    forProduct,\r\n                     ctrl.text,\r\n                   )\r\n                       .then((CreateNoteModel value) {\r\n                     CommonDialogs.showToast(ctx: context, msg: value!.message!);\r\n@@ -104,12 +91,10 @@\n                     Get.back();\r\n                   });\r\n                 }\r\n               },\r\n-              child: Text(\r\n-                  widget.noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n+              child: Text(noteId.compareTo(\"-1\") == 0 ? \"Add Note\" : \"Update\"))\r\n         ]),\r\n       ),\r\n     );\r\n-    ;\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1664880305136,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n class AddNoteWidget extends GetView<NotesController> {\r\n   String note;\r\n   String noteId;\r\n   String forProduct;\r\n-\r\n+TextEditingController\r\n   AddNoteWidget(\r\n       {required this.note, required this.noteId, required this.forProduct});\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1664880315011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,11 +17,11 @@\n class AddNoteWidget extends GetView<NotesController> {\r\n   String note;\r\n   String noteId;\r\n   String forProduct;\r\n-TextEditingController\r\n+  TextEditingController ctrl;\r\n   AddNoteWidget(\r\n-      {required this.note, required this.noteId, required this.forProduct});\r\n+      {required this.note, required this.noteId, required this.forProduct,required this.});\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     TextEditingController ctrl = new TextEditingController(text: note);\r\n"
                },
                {
                    "date": 1664880322941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n    // TextEditingController ctrl = new TextEditingController(text: note);\r\n+   \r\n     return Padding(\r\n       padding:\r\n           EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom),\r\n       child: Container(\r\n"
                }
            ],
            "date": 1664602992748,
            "name": "Commit-0",
            "content": "stle"
        }
    ]
}