{
    "sourceFile": "lib/app/modules/home/views/widgets/item_widget.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 40,
            "patches": [
                {
                    "date": 1664866540885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1664866549736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n                                     // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n                                     note: data!.noteOfUser!.length == 0\r\n                                         ? \"\"\r\n                                         : data!.noteOfUser![0].description!,\r\n-                                    noteId: data!.noteOfUser!.length == 0\r\n+                                    noteId: data.noteOfUser!.length == 0\r\n                                         ? \"-1\"\r\n                                         : data!.noteOfUser![0].sId!,\r\n                                     forProduct: data!.sId!,\r\n                                   ),\r\n"
                },
                {
                    "date": 1664866555095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,15 +76,15 @@\n                                 return Padding(\r\n                                   padding: MediaQuery.of(context).viewInsets,\r\n                                   child: AddNoteWidget(\r\n                                     // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n-                                    note: data!.noteOfUser!.length == 0\r\n+                                    note: data.noteOfUser!.length == 0\r\n                                         ? \"\"\r\n-                                        : data!.noteOfUser![0].description!,\r\n+                                        : data.noteOfUser![0].description!,\r\n                                     noteId: data.noteOfUser!.length == 0\r\n                                         ? \"-1\"\r\n-                                        : data!.noteOfUser![0].sId!,\r\n-                                    forProduct: data!.sId!,\r\n+                                        : data.noteOfUser![0].sId!,\r\n+                                    forProduct: data.sId!,\r\n                                   ),\r\n                                 );\r\n                               });\r\n                         },\r\n"
                },
                {
                    "date": 1664866566278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,13 +92,13 @@\n                           print(\r\n                               \"notesController.allNotes ${notesController.allNotes.length}\");\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n-                            color: data!.noteOfUser!.length == 0 ||\r\n+                            color: data.noteOfUser!.length == 0 ||\r\n                                     notesController.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n                                                 element.forProduct!.sId ==\r\n-                                                data!.sId) ==\r\n+                                                data.sId) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n@@ -125,9 +125,9 @@\n                         Icons.remove_red_eye,\r\n                         color: ColorConstants.colorIconColor,\r\n                       ),\r\n                       Text(\r\n-                        \" ${data!.noOfViews!.toString()}\",\r\n+                        \" ${data.noOfViews!.toString()}\",\r\n                         //   style: TextStyle(color: Colors.black),\r\n                       )\r\n                     ])\r\n               ],\r\n"
                },
                {
                    "date": 1664866589647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,9 +98,9 @@\n                                             (element) =>\r\n                                                 element.forProduct!.sId ==\r\n                                                 data.sId) ==\r\n                                         -1\r\n-                                ? ColorConstants.colorPrimary1\r\n+                                ? ColorConstants.greeen\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n                         }),\r\n                       ),\r\n@@ -139,9 +139,9 @@\n             // ),\r\n             leading: ClipRRect(\r\n                 borderRadius: BorderRadius.circular(4),\r\n                 child: Image.network(\r\n-                  Config.baseUrlImages + data!.image! + Config.imagesExtenstion,\r\n+                  Config.baseUrlImages + data.image! + Config.imagesExtenstion,\r\n                   height: 50,\r\n                   width: 50,\r\n                   fit: BoxFit.cover,\r\n                 )),\r\n"
                },
                {
                    "date": 1664866627976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n         }),\r\n         child: Card(\r\n           // elevation: 1,\r\n           child: ListTile(\r\n-            title: Text(data!.name!),\r\n+            title: Text(data.name!),\r\n             subtitle: Column(\r\n               // mainAxisAlignment: MainAxisAlignment.end,\r\n               crossAxisAlignment: CrossAxisAlignment.end,\r\n               children: [\r\n@@ -98,9 +98,9 @@\n                                             (element) =>\r\n                                                 element.forProduct!.sId ==\r\n                                                 data.sId) ==\r\n                                         -1\r\n-                                ? ColorConstants.greeen\r\n+                                ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n                         }),\r\n                       ),\r\n"
                },
                {
                    "date": 1664866637063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,10 @@\n     print(\"image.....\" +\r\n         Config.baseUrlImages +\r\n         data!.image! +\r\n         Config.imagesExtenstion);\r\n+\r\n+        print(\"note.... \")\r\n     return Padding(\r\n       padding: const EdgeInsets.all(8.0),\r\n       child: InkWell(\r\n         onTap: (() {\r\n"
                },
                {
                    "date": 1664866645723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,12 @@\n         Config.baseUrlImages +\r\n         data!.image! +\r\n         Config.imagesExtenstion);\r\n \r\n-        print(\"note.... \")\r\n+        print(\"note.... ${ notesController.allNotes.lastIndexWhere(\r\n+                                            (element) =>\r\n+                                                element.forProduct!.sId ==\r\n+                                                data.sId)}\")\r\n     return Padding(\r\n       padding: const EdgeInsets.all(8.0),\r\n       child: InkWell(\r\n         onTap: (() {\r\n"
                },
                {
                    "date": 1664866832542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n \r\n import '../../../notes/widgets/add_notes_widget.dart'; //odel;\r\n \r\n class ItemWidget extends StatelessWidget {\r\n+class ItemWidget extends StatelessWidget {\r\n   productModel.Data data;\r\n   int pos;\r\n \r\n   ItemWidget({required this.data, required this.pos});\r\n@@ -27,12 +28,10 @@\n         Config.baseUrlImages +\r\n         data!.image! +\r\n         Config.imagesExtenstion);\r\n \r\n-        print(\"note.... ${ notesController.allNotes.lastIndexWhere(\r\n-                                            (element) =>\r\n-                                                element.forProduct!.sId ==\r\n-                                                data.sId)}\")\r\n+    print(\r\n+        \"note.... ${notesController.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n     return Padding(\r\n       padding: const EdgeInsets.all(8.0),\r\n       child: InkWell(\r\n         onTap: (() {\r\n"
                },
                {
                    "date": 1664866841081,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,16 +10,16 @@\n import 'package:therapeutic/app/routes/app_pages.dart';\r\n \r\n import '../../../notes/widgets/add_notes_widget.dart'; //odel;\r\n \r\n-class ItemWidget extends StatelessWidget {\r\n-class ItemWidget extends StatelessWidget {\r\n+// class ItemWidget extends StatelessWidget {\r\n+class ItemWidget extends GetView<NotesController> {\r\n   productModel.Data data;\r\n   int pos;\r\n \r\n   ItemWidget({required this.data, required this.pos});\r\n \r\n-  NotesController notesController = NotesController();\r\n+ // NotesController notesController = NotesController();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     String str = data!.description!;\r\n"
                },
                {
                    "date": 1664866851053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         data!.image! +\r\n         Config.imagesExtenstion);\r\n \r\n     print(\r\n-        \"note.... ${notesController.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+        \"note.... ${con.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n     return Padding(\r\n       padding: const EdgeInsets.all(8.0),\r\n       child: InkWell(\r\n         onTap: (() {\r\n"
                },
                {
                    "date": 1664866861202,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n         data!.image! +\r\n         Config.imagesExtenstion);\r\n \r\n     print(\r\n-        \"note.... ${con.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+        \"note.... ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n     return Padding(\r\n       padding: const EdgeInsets.all(8.0),\r\n       child: InkWell(\r\n         onTap: (() {\r\n@@ -93,9 +93,9 @@\n                               });\r\n                         },\r\n                         child: Obx(() {\r\n                           print(\r\n-                              \"notesController.allNotes ${notesController.allNotes.length}\");\r\n+                              \"notesController.allNotes ${contro.allNotes.length}\");\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     notesController.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664866867415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -93,9 +93,9 @@\n                               });\r\n                         },\r\n                         child: Obx(() {\r\n                           print(\r\n-                              \"notesController.allNotes ${contro.allNotes.length}\");\r\n+                              \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     notesController.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664866983356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,12 +94,13 @@\n                         },\r\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n+                              \r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n-                                    notesController.allNotes.lastIndexWhere(\r\n+                                    controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n                                                 element.forProduct!.sId ==\r\n                                                 data.sId) ==\r\n                                         -1\r\n"
                },
                {
                    "date": 1664866991875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,10 @@\n                         },\r\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n-                              \r\n+                                print(\r\n+                              \"note....in to observable ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664867038536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                                 print(\r\n-                              \"note....in to observable ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element)  element.forProduct!.sId == data.sId)}\");\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664867046896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                                 print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element)  element.forProduct!.sId == data.sId)}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664867717972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,9 @@\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                                 print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+                              \r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664867732848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,12 @@\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                                 print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n-                              \r\n+                              for(int i=0;i<controller.allNotes.lengthli++)\r\n+                              {\r\n+                                \r\n+                              }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n"
                },
                {
                    "date": 1664867739120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,9 @@\n   int pos;\r\n \r\n   ItemWidget({required this.data, required this.pos});\r\n \r\n- // NotesController notesController = NotesController();\r\n+  // NotesController notesController = NotesController();\r\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     String str = data!.description!;\r\n@@ -66,81 +66,79 @@\n                     height: 1,\r\n                     color: ColorConstants.color_white,\r\n                   ),\r\n                 ),\r\n-                Row(\r\n-                    mainAxisAlignment: MainAxisAlignment.end,\r\n-                    children: <Widget>[\r\n-                      InkWell(\r\n-                        onTap: () {\r\n-                          showModalBottomSheet(\r\n-                              isScrollControlled: true,\r\n-                              elevation: 4,\r\n-                              context: context,\r\n-                              builder: (ctx) {\r\n-                                return Padding(\r\n-                                  padding: MediaQuery.of(context).viewInsets,\r\n-                                  child: AddNoteWidget(\r\n-                                    // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n-                                    note: data.noteOfUser!.length == 0\r\n-                                        ? \"\"\r\n-                                        : data.noteOfUser![0].description!,\r\n-                                    noteId: data.noteOfUser!.length == 0\r\n-                                        ? \"-1\"\r\n-                                        : data.noteOfUser![0].sId!,\r\n-                                    forProduct: data.sId!,\r\n-                                  ),\r\n-                                );\r\n-                              });\r\n-                        },\r\n-                        child: Obx(() {\r\n-                          print(\r\n-                              \"notesController.allNotes ${controller.allNotes.length}\");\r\n-                                print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n-                              for(int i=0;i<controller.allNotes.lengthli++)\r\n-                              {\r\n-                                \r\n-                              }\r\n-                          return Icon(\r\n-                            Icons.note_alt_outlined,\r\n-                            color: data.noteOfUser!.length == 0 ||\r\n-                                    controller.allNotes.lastIndexWhere(\r\n-                                            (element) =>\r\n-                                                element.forProduct!.sId ==\r\n-                                                data.sId) ==\r\n-                                        -1\r\n-                                ? ColorConstants.colorPrimary1\r\n-                                : ColorConstants.greeen,\r\n-                          );\r\n-                        }),\r\n-                      ),\r\n-                      // Text(\r\n-                      //   \"Add Note\",\r\n-                      //   style: TextStyle(color: Colors.black),\r\n-                      // ),\r\n-                      SizedBox(\r\n-                        width: 4,\r\n-                      ),\r\n+                Row(mainAxisAlignment: MainAxisAlignment.end, children: <\r\n+                    Widget>[\r\n+                  InkWell(\r\n+                    onTap: () {\r\n+                      showModalBottomSheet(\r\n+                          isScrollControlled: true,\r\n+                          elevation: 4,\r\n+                          context: context,\r\n+                          builder: (ctx) {\r\n+                            return Padding(\r\n+                              padding: MediaQuery.of(context).viewInsets,\r\n+                              child: AddNoteWidget(\r\n+                                // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n+                                note: data.noteOfUser!.length == 0\r\n+                                    ? \"\"\r\n+                                    : data.noteOfUser![0].description!,\r\n+                                noteId: data.noteOfUser!.length == 0\r\n+                                    ? \"-1\"\r\n+                                    : data.noteOfUser![0].sId!,\r\n+                                forProduct: data.sId!,\r\n+                              ),\r\n+                            );\r\n+                          });\r\n+                    },\r\n+                    child: Obx(() {\r\n+                      print(\r\n+                          \"notesController.allNotes ${controller.allNotes.length}\");\r\n+                      print(\r\n+                          \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+                      for (int i = 0; i < controller.allNotes.length; i++) {\r\n \r\n-                      ElevatedButton.icon(\r\n-                          onPressed: () {},\r\n-                          icon: Icon(Icons.star_border),\r\n-                          label: Text(\"Add to Favorite\",\r\n-                              style: TextStyle(color: Colors.white))),\r\n \r\n-                      SizedBox(\r\n-                        width: 4,\r\n-                      ),\r\n-                      Icon(\r\n-                        Icons.remove_red_eye,\r\n-                        color: ColorConstants.colorIconColor,\r\n-                      ),\r\n-                      Text(\r\n-                        \" ${data.noOfViews!.toString()}\",\r\n-                        //   style: TextStyle(color: Colors.black),\r\n-                      )\r\n-                    ])\r\n+                        \r\n+                      }\r\n+                      return Icon(\r\n+                        Icons.note_alt_outlined,\r\n+                        color: data.noteOfUser!.length == 0 ||\r\n+                                controller.allNotes.lastIndexWhere((element) =>\r\n+                                        element.forProduct!.sId == data.sId) ==\r\n+                                    -1\r\n+                            ? ColorConstants.colorPrimary1\r\n+                            : ColorConstants.greeen,\r\n+                      );\r\n+                    }),\r\n+                  ),\r\n+                  // Text(\r\n+                  //   \"Add Note\",\r\n+                  //   style: TextStyle(color: Colors.black),\r\n+                  // ),\r\n+                  SizedBox(\r\n+                    width: 4,\r\n+                  ),\r\n+\r\n+                  ElevatedButton.icon(\r\n+                      onPressed: () {},\r\n+                      icon: Icon(Icons.star_border),\r\n+                      label: Text(\"Add to Favorite\",\r\n+                          style: TextStyle(color: Colors.white))),\r\n+\r\n+                  SizedBox(\r\n+                    width: 4,\r\n+                  ),\r\n+                  Icon(\r\n+                    Icons.remove_red_eye,\r\n+                    color: ColorConstants.colorIconColor,\r\n+                  ),\r\n+                  Text(\r\n+                    \" ${data.noOfViews!.toString()}\",\r\n+                    //   style: TextStyle(color: Colors.black),\r\n+                  )\r\n+                ])\r\n               ],\r\n             ),\r\n             // leading: Icon(\r\n             //   Icons.account_tree_sharp,\r\n"
                },
                {
                    "date": 1664867749568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,10 +97,10 @@\n                       print(\r\n                           \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                       for (int i = 0; i < controller.allNotes.length; i++) {\r\n \r\n+print(element.forProduct!.sId)\r\n \r\n-                        \r\n                       }\r\n                       return Icon(\r\n                         Icons.note_alt_outlined,\r\n                         color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664867761348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,79 +66,80 @@\n                     height: 1,\r\n                     color: ColorConstants.color_white,\r\n                   ),\r\n                 ),\r\n-                Row(mainAxisAlignment: MainAxisAlignment.end, children: <\r\n-                    Widget>[\r\n-                  InkWell(\r\n-                    onTap: () {\r\n-                      showModalBottomSheet(\r\n-                          isScrollControlled: true,\r\n-                          elevation: 4,\r\n-                          context: context,\r\n-                          builder: (ctx) {\r\n-                            return Padding(\r\n-                              padding: MediaQuery.of(context).viewInsets,\r\n-                              child: AddNoteWidget(\r\n-                                // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n-                                note: data.noteOfUser!.length == 0\r\n-                                    ? \"\"\r\n-                                    : data.noteOfUser![0].description!,\r\n-                                noteId: data.noteOfUser!.length == 0\r\n-                                    ? \"-1\"\r\n-                                    : data.noteOfUser![0].sId!,\r\n-                                forProduct: data.sId!,\r\n-                              ),\r\n-                            );\r\n-                          });\r\n-                    },\r\n-                    child: Obx(() {\r\n-                      print(\r\n-                          \"notesController.allNotes ${controller.allNotes.length}\");\r\n-                      print(\r\n-                          \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n-                      for (int i = 0; i < controller.allNotes.length; i++) {\r\n+                Row(\r\n+                    mainAxisAlignment: MainAxisAlignment.end,\r\n+                    children: <Widget>[\r\n+                      InkWell(\r\n+                        onTap: () {\r\n+                          showModalBottomSheet(\r\n+                              isScrollControlled: true,\r\n+                              elevation: 4,\r\n+                              context: context,\r\n+                              builder: (ctx) {\r\n+                                return Padding(\r\n+                                  padding: MediaQuery.of(context).viewInsets,\r\n+                                  child: AddNoteWidget(\r\n+                                    // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n+                                    note: data.noteOfUser!.length == 0\r\n+                                        ? \"\"\r\n+                                        : data.noteOfUser![0].description!,\r\n+                                    noteId: data.noteOfUser!.length == 0\r\n+                                        ? \"-1\"\r\n+                                        : data.noteOfUser![0].sId!,\r\n+                                    forProduct: data.sId!,\r\n+                                  ),\r\n+                                );\r\n+                              });\r\n+                        },\r\n+                        child: Obx(() {\r\n+                          print(\r\n+                              \"notesController.allNotes ${controller.allNotes.length}\");\r\n+                          print(\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+                          for (int i = 0; i < controller.allNotes.length; i++) {\r\n+                            print(controller.allNotes.forProduct!.sId);\r\n+                          }\r\n+                          return Icon(\r\n+                            Icons.note_alt_outlined,\r\n+                            color: data.noteOfUser!.length == 0 ||\r\n+                                    controller.allNotes.lastIndexWhere(\r\n+                                            (element) =>\r\n+                                                element.forProduct!.sId ==\r\n+                                                data.sId) ==\r\n+                                        -1\r\n+                                ? ColorConstants.colorPrimary1\r\n+                                : ColorConstants.greeen,\r\n+                          );\r\n+                        }),\r\n+                      ),\r\n+                      // Text(\r\n+                      //   \"Add Note\",\r\n+                      //   style: TextStyle(color: Colors.black),\r\n+                      // ),\r\n+                      SizedBox(\r\n+                        width: 4,\r\n+                      ),\r\n \r\n-print(element.forProduct!.sId)\r\n+                      ElevatedButton.icon(\r\n+                          onPressed: () {},\r\n+                          icon: Icon(Icons.star_border),\r\n+                          label: Text(\"Add to Favorite\",\r\n+                              style: TextStyle(color: Colors.white))),\r\n \r\n-                      }\r\n-                      return Icon(\r\n-                        Icons.note_alt_outlined,\r\n-                        color: data.noteOfUser!.length == 0 ||\r\n-                                controller.allNotes.lastIndexWhere((element) =>\r\n-                                        element.forProduct!.sId == data.sId) ==\r\n-                                    -1\r\n-                            ? ColorConstants.colorPrimary1\r\n-                            : ColorConstants.greeen,\r\n-                      );\r\n-                    }),\r\n-                  ),\r\n-                  // Text(\r\n-                  //   \"Add Note\",\r\n-                  //   style: TextStyle(color: Colors.black),\r\n-                  // ),\r\n-                  SizedBox(\r\n-                    width: 4,\r\n-                  ),\r\n-\r\n-                  ElevatedButton.icon(\r\n-                      onPressed: () {},\r\n-                      icon: Icon(Icons.star_border),\r\n-                      label: Text(\"Add to Favorite\",\r\n-                          style: TextStyle(color: Colors.white))),\r\n-\r\n-                  SizedBox(\r\n-                    width: 4,\r\n-                  ),\r\n-                  Icon(\r\n-                    Icons.remove_red_eye,\r\n-                    color: ColorConstants.colorIconColor,\r\n-                  ),\r\n-                  Text(\r\n-                    \" ${data.noOfViews!.toString()}\",\r\n-                    //   style: TextStyle(color: Colors.black),\r\n-                  )\r\n-                ])\r\n+                      SizedBox(\r\n+                        width: 4,\r\n+                      ),\r\n+                      Icon(\r\n+                        Icons.remove_red_eye,\r\n+                        color: ColorConstants.colorIconColor,\r\n+                      ),\r\n+                      Text(\r\n+                        \" ${data.noOfViews!.toString()}\",\r\n+                        //   style: TextStyle(color: Colors.black),\r\n+                      )\r\n+                    ])\r\n               ],\r\n             ),\r\n             // leading: Icon(\r\n             //   Icons.account_tree_sharp,\r\n"
                },
                {
                    "date": 1664867773115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(controller.allNotes.forProduct!.sId);\r\n+                            print(\"ID OF PRODUCTcontroller.allNotes[i].forProduct!.sId);\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664867779225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(\"ID OF PRODUCTcontroller.allNotes[i].forProduct!.sId);\r\n+                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId);\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664873905012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,16 +97,16 @@\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId);\r\n+                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n-                                                element.forProduct!.sId ==\r\n+                                                element.forProduct!.sId.co\r\n                                                 data.sId) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n"
                },
                {
                    "date": 1664873915546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,10 +104,10 @@\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n-                                                element.forProduct!.sId.co\r\n-                                                data.sId) ==\r\n+                                                element.forProduct!.sId.compareTo(\r\n+                                                data.sId)) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n"
                },
                {
                    "date": 1664873930768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -106,9 +106,9 @@\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n                                                 element.forProduct!.sId.compareTo(\r\n                                                 data.sId)) ==\r\n-                                        -1\r\n+                                       0\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n                         }),\r\n"
                },
                {
                    "date": 1664873941975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,11 +104,11 @@\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n-                                                element.forProduct!.sId.compareTo(\r\n-                                                data.sId)) ==\r\n-                                       0\r\n+                                                element.forProduct!.sId ==\r\n+                                                data.sId) ==\r\n+                                        -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n                         }),\r\n"
                },
                {
                    "date": 1664873948815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n-                                                element.forProduct!.sId ==\r\n+                                                element.forProduct!.sId.\r\n                                                 data.sId) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n"
                },
                {
                    "date": 1664873959692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,9 @@\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n-                                                element.forProduct!.sId.\r\n+                                                element.forProduct!.sId.compareTo(\r\n                                                 data.sId) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n"
                },
                {
                    "date": 1664873982259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n                                                 element.forProduct!.sId.compareTo(\r\n-                                                data.sId) ==\r\n+                                                data.sId!)) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n"
                },
                {
                    "date": 1664873990885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -105,9 +105,9 @@\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n                                                 element.forProduct!.sId.compareTo(\r\n-                                                data.sId!)) ==\r\n+                                                data.sId) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n                           );\r\n"
                },
                {
                    "date": 1664874007640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,16 +97,16 @@\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n+                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId);\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n                                     controller.allNotes.lastIndexWhere(\r\n                                             (element) =>\r\n-                                                element.forProduct!.sId.compareTo(\r\n+                                                element.forProduct!.sId ==\r\n                                                 data.sId) ==\r\n                                         -1\r\n                                 ? ColorConstants.colorPrimary1\r\n                                 : ColorConstants.greeen,\r\n"
                },
                {
                    "date": 1664874017230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,11 +95,11 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId. == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId);\r\n+                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664874029428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId. == data.sId)}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId.compareTo( == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n                             print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n                           }\r\n                           return Icon(\r\n"
                },
                {
                    "date": 1664874036624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId.compareTo( == data.sId)}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId.compareTo( data.sId))==0}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n                             print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n                           }\r\n                           return Icon(\r\n"
                },
                {
                    "date": 1664874045939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId.compareTo( data.sId))==0}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => (element.forProduct!.sId.compareTo( data.sId))==0}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n                             print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n                           }\r\n                           return Icon(\r\n"
                },
                {
                    "date": 1664874052726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,11 +95,11 @@\n                         child: Obx(() {\r\n                           print(\r\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n-                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => (element.forProduct!.sId.compareTo( data.sId))==0}\");\r\n+                              \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n+                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId);\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664874059898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,9 @@\n                               \"notesController.allNotes ${controller.allNotes.length}\");\r\n                           print(\r\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n-                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId);\r\n+                            print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664874065504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,9 +99,9 @@\n                               \"note....in to observable>>> ${controller.allNotes.lastIndexWhere((element) => element.forProduct!.sId == data.sId)}\");\r\n                           for (int i = 0; i < controller.allNotes.length; i++) {\r\n                             print(\"ID OF PRODUCT...${controller.allNotes[i].forProduct!.sId}\");\r\n \r\n-                            \r\n+                            i\r\n                           }\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color: data.noteOfUser!.length == 0 ||\r\n"
                },
                {
                    "date": 1664874800907,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,9 +116,9 @@\n                                       .compareTo(data.sId.toString()) ==\r\n                                   0;\r\n                             },\r\n                           );\r\n-                          print('isNoteVAialbale ${isNoteVAialbale} ');\r\n+                          print('isNoteVAialbale ${isNoteVAialbale} fo');\r\n                           return Icon(\r\n                             Icons.note_alt_outlined,\r\n                             color:\r\n                                 data.noteOfUser!.length == 0 || !isNoteVAialbale\r\n"
                }
            ],
            "date": 1664866540885,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:flutter_html/flutter_html.dart';\r\nimport 'package:get/get.dart';\r\nimport 'package:therapeutic/app/config/config.dart';\r\nimport 'package:therapeutic/app/constants/color_constants.dart';\r\nimport 'package:therapeutic/app/modules/models/product_model.dart'\r\n    as productModel;\r\nimport 'package:therapeutic/app/modules/notes/controllers/notes_controller.dart';\r\nimport 'package:therapeutic/app/modules/notes/providers/notes_provider.dart';\r\nimport 'package:therapeutic/app/routes/app_pages.dart';\r\n\r\nimport '../../../notes/widgets/add_notes_widget.dart'; //odel;\r\n\r\nclass ItemWidget extends StatelessWidget {\r\n  productModel.Data data;\r\n  int pos;\r\n\r\n  ItemWidget({required this.data, required this.pos});\r\n\r\n  NotesController notesController = NotesController();\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    String str = data!.description!;\r\n    str = str.substring(0, 430) + \"...Read more\";\r\n    print(\"image.....\" +\r\n        Config.baseUrlImages +\r\n        data!.image! +\r\n        Config.imagesExtenstion);\r\n    return Padding(\r\n      padding: const EdgeInsets.all(8.0),\r\n      child: InkWell(\r\n        onTap: (() {\r\n          Get.toNamed(Routes.PRODUCT_DETAIL, arguments: data!.sId!);\r\n        }),\r\n        child: Card(\r\n          // elevation: 1,\r\n          child: ListTile(\r\n            title: Text(data!.name!),\r\n            subtitle: Column(\r\n              // mainAxisAlignment: MainAxisAlignment.end,\r\n              crossAxisAlignment: CrossAxisAlignment.end,\r\n              children: [\r\n                Html(\r\n                  data: str,\r\n                  shrinkWrap: false,\r\n                ),\r\n                InkWell(\r\n                  onTap: (() {\r\n                    Get.toNamed(Routes.PRODUCT_LIST, arguments: data.type!);\r\n                  }),\r\n                  child: Chip(\r\n                      elevation: 1,\r\n                      backgroundColor: ColorConstants.colorPrimaryDark,\r\n                      label: Text(data!.type!,\r\n                          style: TextStyle(color: Colors.white))),\r\n                ),\r\n                Padding(\r\n                  padding: const EdgeInsets.only(\r\n                      left: 8.0, right: 8.0, top: 8.0, bottom: 8.0),\r\n                  child: Divider(\r\n                    height: 1,\r\n                    color: ColorConstants.color_white,\r\n                  ),\r\n                ),\r\n                Row(\r\n                    mainAxisAlignment: MainAxisAlignment.end,\r\n                    children: <Widget>[\r\n                      InkWell(\r\n                        onTap: () {\r\n                          showModalBottomSheet(\r\n                              isScrollControlled: true,\r\n                              elevation: 4,\r\n                              context: context,\r\n                              builder: (ctx) {\r\n                                return Padding(\r\n                                  padding: MediaQuery.of(context).viewInsets,\r\n                                  child: AddNoteWidget(\r\n                                    // note: data!.noteOfUser!.isNotEmpty ? data.noteOfUser![0].description:\"\" );\r\n                                    note: data!.noteOfUser!.length == 0\r\n                                        ? \"\"\r\n                                        : data!.noteOfUser![0].description!,\r\n                                    noteId: data!.noteOfUser!.length == 0\r\n                                        ? \"-1\"\r\n                                        : data!.noteOfUser![0].sId!,\r\n                                    forProduct: data!.sId!,\r\n                                  ),\r\n                                );\r\n                              });\r\n                        },\r\n                        child: Obx(() {\r\n                          print(\r\n                              \"notesController.allNotes ${notesController.allNotes.length}\");\r\n                          return Icon(\r\n                            Icons.note_alt_outlined,\r\n                            color: data!.noteOfUser!.length == 0 ||\r\n                                    notesController.allNotes.lastIndexWhere(\r\n                                            (element) =>\r\n                                                element.forProduct!.sId ==\r\n                                                data!.sId) ==\r\n                                        -1\r\n                                ? ColorConstants.colorPrimary1\r\n                                : ColorConstants.greeen,\r\n                          );\r\n                        }),\r\n                      ),\r\n                      // Text(\r\n                      //   \"Add Note\",\r\n                      //   style: TextStyle(color: Colors.black),\r\n                      // ),\r\n                      SizedBox(\r\n                        width: 4,\r\n                      ),\r\n\r\n                      ElevatedButton.icon(\r\n                          onPressed: () {},\r\n                          icon: Icon(Icons.star_border),\r\n                          label: Text(\"Add to Favorite\",\r\n                              style: TextStyle(color: Colors.white))),\r\n\r\n                      SizedBox(\r\n                        width: 4,\r\n                      ),\r\n                      Icon(\r\n                        Icons.remove_red_eye,\r\n                        color: ColorConstants.colorIconColor,\r\n                      ),\r\n                      Text(\r\n                        \" ${data!.noOfViews!.toString()}\",\r\n                        //   style: TextStyle(color: Colors.black),\r\n                      )\r\n                    ])\r\n              ],\r\n            ),\r\n            // leading: Icon(\r\n            //   Icons.account_tree_sharp,\r\n            //   color: ColorConstants.colorPrimaryDark,\r\n            //   size: 40,\r\n            // ),\r\n            leading: ClipRRect(\r\n                borderRadius: BorderRadius.circular(4),\r\n                child: Image.network(\r\n                  Config.baseUrlImages + data!.image! + Config.imagesExtenstion,\r\n                  height: 50,\r\n                  width: 50,\r\n                  fit: BoxFit.cover,\r\n                )),\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}